{"version":3,"sources":["components/FooterComponent.js","components/HeaderComponent.js","services/EmployeeService.tsx","components/ListEmployeeComponent.js","services/FacilityService.tsx","components/PutEmployeeComponent.js","components/ViewEmployeeComponent.js","components/ListFacilityComponent.js","components/AddFacilityComponent.js","components/ViewFacilityComponent.js","services/CourseService.tsx","components/AddCourseComponent.js","App.js","reportWebVitals.js","index.js"],"names":["FooterComponent","props","state","className","Component","HeaderComponent","href","to","style","color","EMPLOYEE_API_BASE_URL","employeeId","fetch","name","employee","method","body","JSON","stringify","headers","id","ListEmployeeComponent","employees","addEmployee","bind","updateEmployee","deleteEmployee","viewEmployee","EmployeeService","then","res","json","data","setState","filter","emp","this","history","push","pathname","getEmployees","map","position","onClick","addCourse","marginLeft","FACILITY_API_BASE_URL","facility","facilityName","PutEmployeeComponent","saveEmployee","e","preventDefault","createEmployee","goBack","changeNameHandler","event","target","value","changePositionHandler","facilitySelectHandler","FacilityService","getFacilityByName","facilityLabel","Object","keys","length","constructor","match","params","location","facilities","getEmployeeById","getFacilities","placeholder","onChange","DropdownButton","paddingBottom","title","fac","index","Dropdown","Item","cancel","ViewEmployeeComponent","resetCourses","getEmployeeHoursSum","hoursSum","ListFacilityComponent","addFacility","deleteFacility","viewFacility","city","AddFacilityComponent","saveFacility","createFacility","changeCityHandler","ViewFacilityComponent","getEmployeesForFacility","marginTop","COURSE_API_BASE_URL","courseId","hours","course","courses","changeHoursHandler","courseSelectHandler","CourseService","getCourseById","courseLabel","getCourses","c","App","path","exact","component","AddCourseComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa1d5d57.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <footer className=\"footer\">\r\n                    <p className=\"text-muted\">\r\n                        Neo4j Project : Hleb Shypula : WFiIS AGH 2021\r\n                    </p>\r\n                </footer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./HeaderComponent.scss\";\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n                        <div className=\"my-box\">\r\n                            <div className=\"my-1\">\r\n                                <a\r\n                                    href=\"https://github.com/hlebshypulahub/Clouds_Project-WFiIS-2021\"\r\n                                    className=\"navbar-brand\"\r\n                                >\r\n                                    Employee Management App\r\n                                </a>\r\n                            </div>\r\n                            <div className=\"my-2\">\r\n                                <div>\r\n                                    <Link\r\n                                        to=\"/employees\"\r\n                                        style={{ color: \"#FFF\" }}\r\n                                    >\r\n                                        Employees\r\n                                    </Link>\r\n                                </div>\r\n                                <p>&nbsp;&nbsp;&nbsp;</p>\r\n                                <div>\r\n                                    <Link\r\n                                        to=\"/facilities\"\r\n                                        style={{ color: \"#FFF\" }}\r\n                                    >\r\n                                        Facilities\r\n                                    </Link>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderComponent;\r\n","const EMPLOYEE_API_BASE_URL: string = \"/employees\";\r\n\r\ntype Employee = {\r\n    id: number;\r\n    name: string;\r\n    position: string;\r\n    facility: object;\r\n}\r\n\r\nclass EmployeeService {\r\n\r\n    resetCourses(employeeId: number): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL + \"/\" + employeeId + \"/reset-courses\");\r\n    }\r\n\r\n    getEmployees(): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL);\r\n    }\r\n\r\n    getEmployeesForFacility(name: string): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL + \"/for-\" + name);\r\n    }\r\n\r\n    createEmployee(employee: Employee): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(employee),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n        });\r\n    }\r\n\r\n    updateEmployee(employee: Employee): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL + \"/\" + employee.id, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(employee),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n        });\r\n    }\r\n\r\n    getEmployeeById(employeeId: number): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL + \"/\" + employeeId);\r\n    }\r\n\r\n    getEmployeeHoursSum(employeeId: number): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL + \"/hours-sum/\" + employeeId);\r\n    }\r\n\r\n    deleteEmployee(employeeId: number): Promise<Response> {\r\n        return fetch(EMPLOYEE_API_BASE_URL + \"/\" + employeeId, {\r\n            method: 'DELETE',\r\n        });\r\n    }\r\n}\r\n\r\nexport default new EmployeeService();","import React, { Component } from \"react\";\r\nimport EmployeeService from \"../services/EmployeeService\";\r\n\r\nclass ListEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            employees: [],\r\n        };\r\n\r\n        this.addEmployee = this.addEmployee.bind(this);\r\n        this.updateEmployee = this.updateEmployee.bind(this);\r\n        this.deleteEmployee = this.deleteEmployee.bind(this);\r\n        this.viewEmployee = this.viewEmployee.bind(this);\r\n    }\r\n\r\n    deleteEmployee(id) {\r\n        EmployeeService.deleteEmployee(id).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({\r\n                    employees: this.state.employees.filter(\r\n                        (emp) => emp.id !== id\r\n                    ),\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    updateEmployee(id) {\r\n        this.props.history.push(`/put-employee/${id}`);\r\n    }\r\n\r\n    addCourse(id) {\r\n        this.props.history.push(`/employee/${id}/add-course`);\r\n    }\r\n\r\n    viewEmployee(id) {\r\n        this.props.history.push(`/employee/${id}`);\r\n    }\r\n\r\n    addEmployee() {\r\n        this.props.history.push({\r\n            pathname: \"/add-employee\",\r\n            state: { id: -1 },\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        EmployeeService.getEmployees().then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ employees: data });\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Employee List</h2>\r\n                <div>\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Position</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.employees.map((employee) => (\r\n                                <tr key={employee.id}>\r\n                                    <td>{employee.name}</td>\r\n                                    <td>{employee.position}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-info\"\r\n                                            onClick={() =>\r\n                                                this.addCourse(employee.id)\r\n                                            }\r\n                                        >\r\n                                            Add course\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-info\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            onClick={() =>\r\n                                                this.updateEmployee(employee.id)\r\n                                            }\r\n                                        >\r\n                                            Update\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-danger\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            onClick={() =>\r\n                                                this.deleteEmployee(employee.id)\r\n                                            }\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-info\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            onClick={() =>\r\n                                                this.viewEmployee(employee.id)\r\n                                            }\r\n                                        >\r\n                                            View\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={this.addEmployee}>\r\n                    Add Employee\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListEmployeeComponent;\r\n","const FACILITY_API_BASE_URL: string = \"/facilities\";\r\n\r\ntype Facility = {\r\n    id: number;\r\n    name: string;\r\n    city: string;\r\n    employees: Array<object>;\r\n}\r\n\r\nclass FacilityService {\r\n\r\n    getFacilities(): Promise<Response> {\r\n        return fetch(FACILITY_API_BASE_URL);\r\n    }\r\n\r\n    createFacility(facility: Facility): Promise<Response> {\r\n        return fetch(FACILITY_API_BASE_URL, {\r\n            method: 'POST',\r\n            body: JSON.stringify(facility),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            },\r\n        });\r\n    }\r\n\r\n    getFacilityByName(facilityName: string): Promise<Response> {\r\n        return fetch(FACILITY_API_BASE_URL + \"/\" + facilityName);\r\n    }\r\n\r\n    deleteFacility(facilityName: string): Promise<Response> {\r\n        return fetch(FACILITY_API_BASE_URL + \"/\" + facilityName, {\r\n            method: 'DELETE',\r\n        });\r\n    }\r\n}\r\n\r\nexport default new FacilityService();","import React, { Component } from \"react\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\n\r\nimport EmployeeService from \"../services/EmployeeService\";\r\nimport FacilityService from \"../services/FacilityService\";\r\n\r\nclass PutEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id\r\n                ? this.props.match.params.id\r\n                : this.props.location.state.id,\r\n            name: \"\",\r\n            position: \"\",\r\n            facility: {},\r\n            facilities: [],\r\n        };\r\n\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changePositionHandler = this.changePositionHandler.bind(this);\r\n        this.facilitySelectHandler = this.facilitySelectHandler.bind(this);\r\n        this.saveEmployee = this.saveEmployee.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.state.id === -1) {\r\n            return;\r\n        } else {\r\n            EmployeeService.getEmployeeById(this.state.id).then((res) =>\r\n                res.json().then((data) => {\r\n                    let employee = data;\r\n                    this.setState({\r\n                        name: employee.name,\r\n                        position: employee.position,\r\n                        facility: employee.facility,\r\n                    });\r\n                })\r\n            );\r\n\r\n            FacilityService.getFacilities().then((res) =>\r\n                res.json().then((data) => {\r\n                    this.setState({ facilities: data });\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    saveEmployee = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.id === -1) {\r\n            let employee = {\r\n                name: this.state.name,\r\n                position: this.state.position,\r\n            };\r\n\r\n            EmployeeService.createEmployee(employee).then((res) => {\r\n                this.props.history.push(\"/employees\");\r\n            });\r\n        } else {\r\n            let employee = {\r\n                name: this.state.name,\r\n                position: this.state.position,\r\n                facility: this.state.facility,\r\n            };\r\n\r\n            employee.id = this.state.id;\r\n\r\n            EmployeeService.updateEmployee(employee).then((res) => {\r\n                this.props.history.goBack();\r\n            });\r\n        }\r\n    };\r\n\r\n    cancel() {\r\n        this.props.history.push(\"/employees\");\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    changePositionHandler = (event) => {\r\n        this.setState({ position: event.target.value });\r\n    };\r\n\r\n    facilitySelectHandler = (name) => {\r\n        FacilityService.getFacilityByName(name).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ facility: data });\r\n            })\r\n        );\r\n    };\r\n\r\n    facilityLabel = () => {\r\n        return !(\r\n            this.state.facility === null ||\r\n            (Object.keys(this.state.facility).length === 0 &&\r\n                this.state.facility.constructor === Object)\r\n        )\r\n            ? this.state.facility.name\r\n            : \"Facility\";\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            {this.state.id === -1 ? (\r\n                                <h3 className=\"text-center\">Add Employee</h3>\r\n                            ) : (\r\n                                <h3 className=\"text-center\">Update Employee</h3>\r\n                            )}\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name\"\r\n                                            name=\"name\"\r\n                                            value={this.state.name}\r\n                                            onChange={(e) =>\r\n                                                this.changeNameHandler(e)\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Position:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Position\"\r\n                                            name=\"position\"\r\n                                            value={this.state.position}\r\n                                            onChange={(e) =>\r\n                                                this.changePositionHandler(e)\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.id !== -1 && (\r\n                                        <DropdownButton\r\n                                            style={{ paddingBottom: \"20px\" }}\r\n                                            title={this.facilityLabel()}\r\n                                            id=\"dropdown-menu-align-right\"\r\n                                        >\r\n                                            {this.state.facilities.map(\r\n                                                (fac, index) => {\r\n                                                    return (\r\n                                                        <Dropdown.Item\r\n                                                            key={fac.name}\r\n                                                            href=\"\"\r\n                                                            onClick={() =>\r\n                                                                this.facilitySelectHandler(\r\n                                                                    fac.name\r\n                                                                )\r\n                                                            }\r\n                                                        >\r\n                                                            {fac.name}\r\n                                                        </Dropdown.Item>\r\n                                                    );\r\n                                                }\r\n                                            )}\r\n                                        </DropdownButton>\r\n                                    )}\r\n                                    <button\r\n                                        className=\"btn btn-success\"\r\n                                        onClick={this.saveEmployee}\r\n                                    >\r\n                                        Save\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn-danger\"\r\n                                        onClick={this.cancel.bind(this)}\r\n                                        style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PutEmployeeComponent;\r\n","import React, { Component } from \"react\";\r\nimport EmployeeService from \"../services/EmployeeService\";\r\n\r\nclass ViewEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            employee: {},\r\n            hoursSum: 0,\r\n        };\r\n\r\n        this.resetCourses = this.resetCourses.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        EmployeeService.getEmployeeById(this.state.id).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ employee: data });\r\n            })\r\n        );\r\n\r\n        EmployeeService.getEmployeeHoursSum(this.state.id).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ hoursSum: data });\r\n            })\r\n        );\r\n    }\r\n\r\n    resetCourses = (e) => {\r\n        e.preventDefault();\r\n\r\n        EmployeeService.resetCourses(this.state.id).then((res) => {\r\n            EmployeeService.getEmployeeHoursSum(this.state.id).then((res) =>\r\n                res.json().then((data) => {\r\n                    this.setState({ hoursSum: data });\r\n                })\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card col-md-6 offset-md-3\">\r\n                    <h3 className=\"text-center\">Employee Details</h3>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <label>Name: &nbsp;</label>\r\n                            <div>{this.state.employee.name}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>Position: &nbsp;</label>\r\n                            <div>{this.state.employee.position}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>Course hours sum: &nbsp;</label>\r\n                            <div>{this.state.hoursSum}</div>\r\n                        </div>\r\n                        <button\r\n                            className=\"btn btn-success\"\r\n                            onClick={this.resetCourses}\r\n                        >\r\n                            Reset courses due to promotion\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewEmployeeComponent;\r\n","import React, { Component } from \"react\";\r\nimport FacilityService from \"../services/FacilityService\";\r\n\r\nclass ListFacilityComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            facilities: [],\r\n        };\r\n\r\n        this.addFacility = this.addFacility.bind(this);\r\n        this.deleteFacility = this.deleteFacility.bind(this);\r\n        this.viewFacility = this.viewFacility.bind(this);\r\n    }\r\n\r\n    deleteFacility(name) {\r\n        FacilityService.deleteFacility(name).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({\r\n                    facilities: this.state.facilities.filter(\r\n                        (fac) => fac.name !== name\r\n                    ),\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    viewFacility(name) {\r\n        this.props.history.push(`/facility/${name}`);\r\n    }\r\n\r\n    addFacility() {\r\n        this.props.history.push(\"/add-facility\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        FacilityService.getFacilities().then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ facilities: data });\r\n            })\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">Facility List</h2>\r\n                <div>\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>City</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.facilities.map((facility) => (\r\n                                <tr key={facility.id}>\r\n                                    <td>{facility.name}</td>\r\n                                    <td>{facility.city}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-danger\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            onClick={() =>\r\n                                                this.deleteFacility(facility.name)\r\n                                            }\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-info\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            onClick={() =>\r\n                                                this.viewFacility(facility.name)\r\n                                            }\r\n                                        >\r\n                                            View\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={this.addFacility}>\r\n                    Add Facility\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListFacilityComponent;\r\n","import React, { Component } from \"react\";\r\nimport FacilityService from \"../services/FacilityService\";\r\n\r\nclass AddFacilityComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            city: \"\",\r\n        };\r\n\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeCityHandler = this.changeCityHandler.bind(this);\r\n        this.saveFacility = this.saveFacility.bind(this);\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     if (this.state.id === -1) {\r\n    //         return;\r\n    //     } else {\r\n    //         EmployeeService.getEmployeeById(this.state.id).then((res) =>\r\n    //             res.json().then((data) => {\r\n    //                 let employee = data;\r\n    //                 this.setState({\r\n    //                     name: employee.name,\r\n    //                     position: employee.position,\r\n    //                 });\r\n    //             })\r\n    //         );\r\n    //     }\r\n    // }\r\n\r\n    saveFacility = (e) => {\r\n        e.preventDefault();\r\n\r\n        let facility = {\r\n            name: this.state.name,\r\n            city: this.state.city,\r\n        };\r\n\r\n        FacilityService.createFacility(facility).then((res) => {\r\n            this.props.history.push(\"/facilities\");\r\n        });\r\n    };\r\n\r\n    cancel() {\r\n        this.props.history.push(\"/facilities\");\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    changeCityHandler = (event) => {\r\n        this.setState({ city: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">Add Facility</h3>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name\"\r\n                                            name=\"name\"\r\n                                            value={this.state.name}\r\n                                            onChange={(e) =>\r\n                                                this.changeNameHandler(e)\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>City:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"City\"\r\n                                            name=\"city\"\r\n                                            value={this.state.city}\r\n                                            onChange={(e) =>\r\n                                                this.changeCityHandler(e)\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"btn btn-success\"\r\n                                        onClick={this.saveFacility}\r\n                                    >\r\n                                        Save\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn-danger\"\r\n                                        onClick={this.cancel.bind(this)}\r\n                                        style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFacilityComponent;\r\n","import React, { Component } from \"react\";\r\nimport FacilityService from \"../services/FacilityService\";\r\nimport EmployeeService from \"../services/EmployeeService\";\r\n\r\nclass ViewFacilityComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: this.props.match.params.name,\r\n            facility: {},\r\n            employees: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        FacilityService.getFacilityByName(this.state.name).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ facility: data });\r\n            })\r\n        );\r\n\r\n        EmployeeService.getEmployeesForFacility(this.state.name).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ employees: data });\r\n            })\r\n        );\r\n    }\r\n\r\n    deleteEmployee(id) {\r\n        EmployeeService.deleteEmployee(id).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({\r\n                    employees: this.state.employees.filter(\r\n                        (emp) => emp.id !== id\r\n                    ),\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    updateEmployee(id) {\r\n        this.props.history.push(`/put-employee/${id}`);\r\n    }\r\n\r\n    viewEmployee(id) {\r\n        this.props.history.push(`/employee/${id}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"card col-md-6 offset-md-3\">\r\n                    <h3 className=\"text-center\">Facility Details</h3>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <label>Name: &nbsp;</label>\r\n                            <div>{this.state.facility.name}</div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label>City: &nbsp;</label>\r\n                            <div>{this.state.facility.city}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{ marginTop: \"20px\" }}>\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Position</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.employees.map((employee) => (\r\n                                <tr key={employee.id}>\r\n                                    <td>{employee.name}</td>\r\n                                    <td>{employee.position}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            className=\"btn btn-info\"\r\n                                            onClick={() =>\r\n                                                this.updateEmployee(employee.id)\r\n                                            }\r\n                                        >\r\n                                            Update\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-danger\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            onClick={() =>\r\n                                                this.deleteEmployee(employee.id)\r\n                                            }\r\n                                        >\r\n                                            Delete\r\n                                        </button>\r\n                                        <button\r\n                                            className=\"btn btn-info\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            onClick={() =>\r\n                                                this.viewEmployee(employee.id)\r\n                                            }\r\n                                        >\r\n                                            View\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewFacilityComponent;\r\n","const COURSE_API_BASE_URL: string = \"/courses\";\r\n\r\nclass CourseService {\r\n    getCourseById(courseId: number): Promise<Response> {\r\n        return fetch(COURSE_API_BASE_URL + \"/\" + courseId);\r\n    }\r\n\r\n    getCourses(): Promise<Response> {\r\n        return fetch(COURSE_API_BASE_URL);\r\n    }\r\n}\r\n\r\nexport default new CourseService();","import React, { Component } from \"react\";\r\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\r\n\r\nimport EmployeeService from \"../services/EmployeeService\";\r\nimport CourseService from \"../services/CourseService\";\r\n\r\nclass PutEmployeeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: \"\",\r\n            hours: 0,\r\n            course: {},\r\n            employee: {},\r\n            courses: [],\r\n        };\r\n\r\n        this.changeNameHandler = this.changeNameHandler.bind(this);\r\n        this.changeHoursHandler = this.changeHoursHandler.bind(this);\r\n        this.courseSelectHandler = this.courseSelectHandler.bind(this);\r\n        this.saveEmployee = this.saveEmployee.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        EmployeeService.getEmployeeById(this.state.id).then((res) =>\r\n            res.json().then((data) => {\r\n                let employee = data;\r\n                this.setState({\r\n                    employee,\r\n                });\r\n            })\r\n        );\r\n\r\n        CourseService.getCourses().then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ courses: data });\r\n            })\r\n        );\r\n    }\r\n\r\n    saveEmployee = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (\r\n            (this.state.name === \"\" || this.state.hours === \"\") &&\r\n            Object.keys(this.state.course).length === 0 &&\r\n            this.state.course.constructor === Object\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        let course =\r\n            this.state.name === \"\" || this.state.hours === \"\"\r\n                ? this.state.course\r\n                : {\r\n                      name: this.state.name,\r\n                      hours: this.state.hours,\r\n                  };\r\n\r\n        let employee = {\r\n            ...this.state.employee,\r\n            courses: [...this.state.employee.courses, course],\r\n        };\r\n\r\n        employee.id = this.state.id;\r\n\r\n        EmployeeService.updateEmployee(employee).then((res) => {\r\n            this.props.history.goBack();\r\n        });\r\n    };\r\n\r\n    cancel() {\r\n        this.props.history.push(\"/employees\");\r\n    }\r\n\r\n    changeNameHandler = (event) => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n\r\n    changeHoursHandler = (event) => {\r\n        this.setState({ hours: event.target.value });\r\n    };\r\n\r\n    courseSelectHandler = (id) => {\r\n        CourseService.getCourseById(id).then((res) =>\r\n            res.json().then((data) => {\r\n                this.setState({ course: data });\r\n            })\r\n        );\r\n    };\r\n\r\n    courseLabel = () => {\r\n        return !(\r\n            Object.keys(this.state.course).length === 0 &&\r\n            this.state.course.constructor === Object\r\n        )\r\n            ? this.state.course.name\r\n            : \"Existing course\";\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                            <h3 className=\"text-center\">\r\n                                Add a course for {this.state.employee.name}\r\n                            </h3>\r\n                            <h4 className=\"text-center\">New course:</h4>\r\n                            <div className=\"card-body\">\r\n                                <form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Name:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Name\"\r\n                                            name=\"name\"\r\n                                            value={this.state.name}\r\n                                            onChange={(e) =>\r\n                                                this.changeNameHandler(e)\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Hours:</label>\r\n                                        <input\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Hours\"\r\n                                            name=\"hours\"\r\n                                            value={this.state.hours}\r\n                                            onChange={(e) =>\r\n                                                this.changeHoursHandler(e)\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <DropdownButton\r\n                                        style={{ paddingBottom: \"20px\" }}\r\n                                        title={this.courseLabel()}\r\n                                        id=\"dropdown-menu-align-right\"\r\n                                    >\r\n                                        {this.state.courses.map((c, index) => {\r\n                                            return (\r\n                                                <Dropdown.Item\r\n                                                    key={c.id}\r\n                                                    href=\"\"\r\n                                                    onClick={() =>\r\n                                                        this.courseSelectHandler(\r\n                                                            c.id\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    {`${c.name} + \", hours: \" + ${c.hours}`}\r\n                                                </Dropdown.Item>\r\n                                            );\r\n                                        })}\r\n                                    </DropdownButton>\r\n                                    <button\r\n                                        className=\"btn btn-success\"\r\n                                        onClick={this.saveEmployee}\r\n                                    >\r\n                                        Save\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn-danger\"\r\n                                        onClick={this.cancel.bind(this)}\r\n                                        style={{ marginLeft: \"10px\" }}\r\n                                    >\r\n                                        Cancel\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PutEmployeeComponent;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport FooterComponent from \"./components/FooterComponent\";\nimport HeaderComponent from \"./components/HeaderComponent\";\nimport ListEmployeeComponent from \"./components/ListEmployeeComponent\";\nimport PutEmployeeComponent from \"./components/PutEmployeeComponent\";\nimport ViewEmployeeComponent from \"./components/ViewEmployeeComponent\";\nimport ListFacilityComponent from \"./components/ListFacilityComponent\";\nimport AddFacilityComponent from \"./components/AddFacilityComponent\";\nimport ViewFacilityComponent from \"./components/ViewFacilityComponent\";\nimport AddCourseComponent from \"./components/AddCourseComponent\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <HeaderComponent />\n                <div className=\"container\">\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            exact\n                            component={ListEmployeeComponent}\n                        ></Route>\n                        <Route\n                            path=\"/employees\"\n                            component={ListEmployeeComponent}\n                        ></Route>\n                        <Route\n                            path=\"/put-employee/:id\"\n                            component={PutEmployeeComponent}\n                        ></Route>\n                        <Route\n                            path=\"/add-employee\"\n                            component={PutEmployeeComponent}\n                        ></Route>\n                        <Route\n                            path=\"/employee/:id/add-course\"\n                            component={AddCourseComponent}\n                        ></Route>\n                        <Route\n                            path=\"/employee/:id\"\n                            component={ViewEmployeeComponent}\n                        ></Route>\n                        <Route\n                            path=\"/facilities\"\n                            component={ListFacilityComponent}\n                        ></Route>\n                        <Route\n                            path=\"/add-facility\"\n                            component={AddFacilityComponent}\n                        ></Route>\n                        <Route\n                            path=\"/facility/:name\"\n                            component={ViewFacilityComponent}\n                        ></Route>\n                    </Switch>\n                </div>\n                <FooterComponent />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}